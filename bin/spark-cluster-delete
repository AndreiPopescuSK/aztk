#!/usr/bin/env python

from dtde import clusterlib, util
import argparse
import os

try:
    import configparser
except ImportError:
    import ConfigParser as configparser

# Path to config
_config_path = os.path.join(os.path.dirname(__file__), '../configuration.cfg') 

if __name__ == '__main__':

    _pool_id = None

    # parse arguments
    parser = argparse.ArgumentParser(prog="az_spark")

    parser.add_argument("--cluster-id", required=True,
                        help="the unique name of your spark cluster")

    args = parser.parse_args()
    
    print()
    if args.cluster_id is not None:
        _pool_id = args.cluster_id
    print("delete cluster id:      %s" % _pool_id)

    # Read config file
    global_config = configparser.ConfigParser()
    global_config.read(_config_path)

    # Set up batch configuration
    batch_account_key = global_config.get('Batch', 'batchaccountkey')
    batch_account_name = global_config.get('Batch', 'batchaccountname')
    batch_service_url = global_config.get('Batch', 'batchserviceurl')

    # create batch client
    batch_client = util.create_batch_client(
            batch_account_key,
            batch_account_name,
            batch_service_url)

    # Delete specified cluster
    clusterlib.delete_cluster(
        batch_client,
        _pool_id)

