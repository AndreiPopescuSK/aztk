#!/usr/bin/env python

from dtde import clusterlib, util
import argparse 
import os

if __name__ == '__main__':

    pool_id = None
    jupyter = None
    webui = None
    masterui = None
    username = None
    connect = True

    # parse arguments
    parser = argparse.ArgumentParser(prog='az_spark')

    parser.add_argument('--id', dest="cluster_id", required=True,
                        help='The unique id of your spark cluster')
    parser.add_argument('--masterui', 
                        help='Local port to port spark\'s master UI to')
    parser.add_argument('--webui', 
                        help='Local port to port spark\'s webui to')
    parser.add_argument('--jupyter', 
                        help='Local port to port jupyter to')
    parser.add_argument('-u', '--username', 
                        help='Username to spark cluster')
    parser.add_argument('--no-connect',
                        action='store_false',
                        default=True,
                        help='Do not create the ssh session. Only print out \
                        the command to run.')

    args = parser.parse_args()
 
    if (args.no_connect is True and args.username is None):
        print('You must specify a username in order to connect automatically.')
        exit()

    if args.cluster_id is not None:
        pool_id = args.cluster_id

    if args.masterui is not None:
        masterui = args.masterui

    if args.webui is not None:
        webui = args.webui

    if args.jupyter is not None:
        jupyter = args.jupyter

    if args.username is not None:
        username = args.username

    if args.no_connect is not None:
        if (args.no_connect is True and username is None):
            connect = False
        elif (args.no_connect is False):
            connect = False

    print('-------------------------------------------')
    print('spark cluster id:    {}'.format(pool_id))
    print('open masterui:       {}'.format(masterui))
    print('open webui:          {}'.format(webui))
    print('open jupyter:        {}'.format(jupyter))
    print('ssh username:        {}'.format(username))
    print('connect:             {}'.format(connect))
    print('-------------------------------------------')

    # get ssh command
    clusterlib.ssh(
        pool_id = pool_id,
        masterui = masterui,
        webui = webui,
        jupyter = jupyter,
        username = username,
        connect = connect)
